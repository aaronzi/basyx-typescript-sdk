/* tslint:disable */
/* eslint-disable */
/**
 * DotAAS Part 2 | HTTP/REST | Asset Administration Shell Repository Service Specification
 * The Full Profile of the Asset Administration Shell Repository Service Specification as part of the [Specification of the Asset Administration Shell: Part 2](http://industrialdigitaltwin.org/en/content-hub).   Publisher: Industrial Digital Twin Association (IDTA) April 2023
 *
 * The version of the OpenAPI document: V3.0.3_SSP-001
 * Contact: info@idtwin.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AnnotatedRelationshipElementMetadata } from './AnnotatedRelationshipElementMetadata';
import {
    instanceOfAnnotatedRelationshipElementMetadata,
    AnnotatedRelationshipElementMetadataFromJSON,
    AnnotatedRelationshipElementMetadataFromJSONTyped,
    AnnotatedRelationshipElementMetadataToJSON,
} from './AnnotatedRelationshipElementMetadata';
import type { BasicEventElementMetadata } from './BasicEventElementMetadata';
import {
    instanceOfBasicEventElementMetadata,
    BasicEventElementMetadataFromJSON,
    BasicEventElementMetadataFromJSONTyped,
    BasicEventElementMetadataToJSON,
} from './BasicEventElementMetadata';
import type { BlobMetadata } from './BlobMetadata';
import {
    instanceOfBlobMetadata,
    BlobMetadataFromJSON,
    BlobMetadataFromJSONTyped,
    BlobMetadataToJSON,
} from './BlobMetadata';
import type { CapabilityMetadata } from './CapabilityMetadata';
import {
    instanceOfCapabilityMetadata,
    CapabilityMetadataFromJSON,
    CapabilityMetadataFromJSONTyped,
    CapabilityMetadataToJSON,
} from './CapabilityMetadata';
import type { EntityMetadata } from './EntityMetadata';
import {
    instanceOfEntityMetadata,
    EntityMetadataFromJSON,
    EntityMetadataFromJSONTyped,
    EntityMetadataToJSON,
} from './EntityMetadata';
import type { FileMetadata } from './FileMetadata';
import {
    instanceOfFileMetadata,
    FileMetadataFromJSON,
    FileMetadataFromJSONTyped,
    FileMetadataToJSON,
} from './FileMetadata';
import type { MultiLanguagePropertyMetadata } from './MultiLanguagePropertyMetadata';
import {
    instanceOfMultiLanguagePropertyMetadata,
    MultiLanguagePropertyMetadataFromJSON,
    MultiLanguagePropertyMetadataFromJSONTyped,
    MultiLanguagePropertyMetadataToJSON,
} from './MultiLanguagePropertyMetadata';
import type { OperationMetadata } from './OperationMetadata';
import {
    instanceOfOperationMetadata,
    OperationMetadataFromJSON,
    OperationMetadataFromJSONTyped,
    OperationMetadataToJSON,
} from './OperationMetadata';
import type { PropertyMetadata } from './PropertyMetadata';
import {
    instanceOfPropertyMetadata,
    PropertyMetadataFromJSON,
    PropertyMetadataFromJSONTyped,
    PropertyMetadataToJSON,
} from './PropertyMetadata';
import type { RangeMetadata } from './RangeMetadata';
import {
    instanceOfRangeMetadata,
    RangeMetadataFromJSON,
    RangeMetadataFromJSONTyped,
    RangeMetadataToJSON,
} from './RangeMetadata';
import type { ReferenceElementMetadata } from './ReferenceElementMetadata';
import {
    instanceOfReferenceElementMetadata,
    ReferenceElementMetadataFromJSON,
    ReferenceElementMetadataFromJSONTyped,
    ReferenceElementMetadataToJSON,
} from './ReferenceElementMetadata';
import type { RelationshipElementMetadata } from './RelationshipElementMetadata';
import {
    instanceOfRelationshipElementMetadata,
    RelationshipElementMetadataFromJSON,
    RelationshipElementMetadataFromJSONTyped,
    RelationshipElementMetadataToJSON,
} from './RelationshipElementMetadata';
import type { SubmodelElementCollectionMetadata } from './SubmodelElementCollectionMetadata';
import {
    instanceOfSubmodelElementCollectionMetadata,
    SubmodelElementCollectionMetadataFromJSON,
    SubmodelElementCollectionMetadataFromJSONTyped,
    SubmodelElementCollectionMetadataToJSON,
} from './SubmodelElementCollectionMetadata';
import type { SubmodelElementListMetadata } from './SubmodelElementListMetadata';
import {
    instanceOfSubmodelElementListMetadata,
    SubmodelElementListMetadataFromJSON,
    SubmodelElementListMetadataFromJSONTyped,
    SubmodelElementListMetadataToJSON,
} from './SubmodelElementListMetadata';

/**
 * @type SubmodelElementMetadata
 * 
 * @export
 */
export type SubmodelElementMetadata = AnnotatedRelationshipElementMetadata | BasicEventElementMetadata | BlobMetadata | CapabilityMetadata | EntityMetadata | FileMetadata | MultiLanguagePropertyMetadata | OperationMetadata | PropertyMetadata | RangeMetadata | ReferenceElementMetadata | RelationshipElementMetadata | SubmodelElementCollectionMetadata | SubmodelElementListMetadata;

export function SubmodelElementMetadataFromJSON(json: any): SubmodelElementMetadata {
    return SubmodelElementMetadataFromJSONTyped(json, false);
}

export function SubmodelElementMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubmodelElementMetadata {
    if (json == null) {
        return json;
    }
    if (instanceOfAnnotatedRelationshipElementMetadata(json)) {
        return AnnotatedRelationshipElementMetadataFromJSONTyped(json, true);
    }
    if (instanceOfBasicEventElementMetadata(json)) {
        return BasicEventElementMetadataFromJSONTyped(json, true);
    }
    if (instanceOfBlobMetadata(json)) {
        return BlobMetadataFromJSONTyped(json, true);
    }
    if (instanceOfCapabilityMetadata(json)) {
        return CapabilityMetadataFromJSONTyped(json, true);
    }
    if (instanceOfEntityMetadata(json)) {
        return EntityMetadataFromJSONTyped(json, true);
    }
    if (instanceOfFileMetadata(json)) {
        return FileMetadataFromJSONTyped(json, true);
    }
    if (instanceOfMultiLanguagePropertyMetadata(json)) {
        return MultiLanguagePropertyMetadataFromJSONTyped(json, true);
    }
    if (instanceOfOperationMetadata(json)) {
        return OperationMetadataFromJSONTyped(json, true);
    }
    if (instanceOfPropertyMetadata(json)) {
        return PropertyMetadataFromJSONTyped(json, true);
    }
    if (instanceOfRangeMetadata(json)) {
        return RangeMetadataFromJSONTyped(json, true);
    }
    if (instanceOfReferenceElementMetadata(json)) {
        return ReferenceElementMetadataFromJSONTyped(json, true);
    }
    if (instanceOfRelationshipElementMetadata(json)) {
        return RelationshipElementMetadataFromJSONTyped(json, true);
    }
    if (instanceOfSubmodelElementCollectionMetadata(json)) {
        return SubmodelElementCollectionMetadataFromJSONTyped(json, true);
    }
    if (instanceOfSubmodelElementListMetadata(json)) {
        return SubmodelElementListMetadataFromJSONTyped(json, true);
    }

    return {} as any;
}

export function SubmodelElementMetadataToJSON(json: any): any {
    return SubmodelElementMetadataToJSONTyped(json, false);
}

export function SubmodelElementMetadataToJSONTyped(value?: SubmodelElementMetadata | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (instanceOfAnnotatedRelationshipElementMetadata(value)) {
        return AnnotatedRelationshipElementMetadataToJSON(value as AnnotatedRelationshipElementMetadata);
    }
    if (instanceOfBasicEventElementMetadata(value)) {
        return BasicEventElementMetadataToJSON(value as BasicEventElementMetadata);
    }
    if (instanceOfBlobMetadata(value)) {
        return BlobMetadataToJSON(value as BlobMetadata);
    }
    if (instanceOfCapabilityMetadata(value)) {
        return CapabilityMetadataToJSON(value as CapabilityMetadata);
    }
    if (instanceOfEntityMetadata(value)) {
        return EntityMetadataToJSON(value as EntityMetadata);
    }
    if (instanceOfFileMetadata(value)) {
        return FileMetadataToJSON(value as FileMetadata);
    }
    if (instanceOfMultiLanguagePropertyMetadata(value)) {
        return MultiLanguagePropertyMetadataToJSON(value as MultiLanguagePropertyMetadata);
    }
    if (instanceOfOperationMetadata(value)) {
        return OperationMetadataToJSON(value as OperationMetadata);
    }
    if (instanceOfPropertyMetadata(value)) {
        return PropertyMetadataToJSON(value as PropertyMetadata);
    }
    if (instanceOfRangeMetadata(value)) {
        return RangeMetadataToJSON(value as RangeMetadata);
    }
    if (instanceOfReferenceElementMetadata(value)) {
        return ReferenceElementMetadataToJSON(value as ReferenceElementMetadata);
    }
    if (instanceOfRelationshipElementMetadata(value)) {
        return RelationshipElementMetadataToJSON(value as RelationshipElementMetadata);
    }
    if (instanceOfSubmodelElementCollectionMetadata(value)) {
        return SubmodelElementCollectionMetadataToJSON(value as SubmodelElementCollectionMetadata);
    }
    if (instanceOfSubmodelElementListMetadata(value)) {
        return SubmodelElementListMetadataToJSON(value as SubmodelElementListMetadata);
    }

    return {};
}

