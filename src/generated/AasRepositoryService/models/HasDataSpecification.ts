/* tslint:disable */
/* eslint-disable */
/**
 * DotAAS Part 2 | HTTP/REST | Asset Administration Shell Repository Service Specification
 * The Full Profile of the Asset Administration Shell Repository Service Specification as part of the [Specification of the Asset Administration Shell: Part 2](http://industrialdigitaltwin.org/en/content-hub).   Publisher: Industrial Digital Twin Association (IDTA) April 2023
 *
 * The version of the OpenAPI document: V3.0.3_SSP-001
 * Contact: info@idtwin.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedDataSpecification } from './EmbeddedDataSpecification';
import {
    EmbeddedDataSpecificationFromJSON,
    EmbeddedDataSpecificationFromJSONTyped,
    EmbeddedDataSpecificationToJSON,
    EmbeddedDataSpecificationToJSONTyped,
} from './EmbeddedDataSpecification';

/**
 * 
 * @export
 * @interface HasDataSpecification
 */
export interface HasDataSpecification {
    /**
     * 
     * @type {Array<EmbeddedDataSpecification>}
     * @memberof HasDataSpecification
     */
    embeddedDataSpecifications?: Array<EmbeddedDataSpecification>;
}

/**
 * Check if a given object implements the HasDataSpecification interface.
 */
export function instanceOfHasDataSpecification(value: object): value is HasDataSpecification {
    return true;
}

export function HasDataSpecificationFromJSON(json: any): HasDataSpecification {
    return HasDataSpecificationFromJSONTyped(json, false);
}

export function HasDataSpecificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): HasDataSpecification {
    if (json == null) {
        return json;
    }
    return {
        
        'embeddedDataSpecifications': json['embeddedDataSpecifications'] == null ? undefined : ((json['embeddedDataSpecifications'] as Array<any>).map(EmbeddedDataSpecificationFromJSON)),
    };
}

export function HasDataSpecificationToJSON(json: any): HasDataSpecification {
    return HasDataSpecificationToJSONTyped(json, false);
}

export function HasDataSpecificationToJSONTyped(value?: HasDataSpecification | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'embeddedDataSpecifications': value['embeddedDataSpecifications'] == null ? undefined : ((value['embeddedDataSpecifications'] as Array<any>).map(EmbeddedDataSpecificationToJSON)),
    };
}

