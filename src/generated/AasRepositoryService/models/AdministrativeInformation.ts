/* tslint:disable */
/* eslint-disable */
/**
 * DotAAS Part 2 | HTTP/REST | Asset Administration Shell Repository Service Specification
 * The Full Profile of the Asset Administration Shell Repository Service Specification as part of the [Specification of the Asset Administration Shell: Part 2](http://industrialdigitaltwin.org/en/content-hub).   Publisher: Industrial Digital Twin Association (IDTA) April 2023
 *
 * The version of the OpenAPI document: V3.0.3_SSP-001
 * Contact: info@idtwin.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EmbeddedDataSpecification } from './EmbeddedDataSpecification';
import {
    EmbeddedDataSpecificationFromJSON,
    EmbeddedDataSpecificationFromJSONTyped,
    EmbeddedDataSpecificationToJSON,
    EmbeddedDataSpecificationToJSONTyped,
} from './EmbeddedDataSpecification';
import type { AdministrativeInformationAllOfVersion } from './AdministrativeInformationAllOfVersion';
import {
    AdministrativeInformationAllOfVersionFromJSON,
    AdministrativeInformationAllOfVersionFromJSONTyped,
    AdministrativeInformationAllOfVersionToJSON,
    AdministrativeInformationAllOfVersionToJSONTyped,
} from './AdministrativeInformationAllOfVersion';
import type { Reference } from './Reference';
import {
    ReferenceFromJSON,
    ReferenceFromJSONTyped,
    ReferenceToJSON,
    ReferenceToJSONTyped,
} from './Reference';
import type { AdministrativeInformationAllOfRevision } from './AdministrativeInformationAllOfRevision';
import {
    AdministrativeInformationAllOfRevisionFromJSON,
    AdministrativeInformationAllOfRevisionFromJSONTyped,
    AdministrativeInformationAllOfRevisionToJSON,
    AdministrativeInformationAllOfRevisionToJSONTyped,
} from './AdministrativeInformationAllOfRevision';

/**
 * 
 * @export
 * @interface AdministrativeInformation
 */
export interface AdministrativeInformation {
    /**
     * 
     * @type {Array<EmbeddedDataSpecification>}
     * @memberof AdministrativeInformation
     */
    embeddedDataSpecifications?: Array<EmbeddedDataSpecification>;
    /**
     * 
     * @type {AdministrativeInformationAllOfVersion}
     * @memberof AdministrativeInformation
     */
    version?: AdministrativeInformationAllOfVersion;
    /**
     * 
     * @type {AdministrativeInformationAllOfRevision}
     * @memberof AdministrativeInformation
     */
    revision?: AdministrativeInformationAllOfRevision;
    /**
     * 
     * @type {Reference}
     * @memberof AdministrativeInformation
     */
    creator?: Reference;
    /**
     * 
     * @type {string}
     * @memberof AdministrativeInformation
     */
    templateId?: string;
}

/**
 * Check if a given object implements the AdministrativeInformation interface.
 */
export function instanceOfAdministrativeInformation(value: object): value is AdministrativeInformation {
    return true;
}

export function AdministrativeInformationFromJSON(json: any): AdministrativeInformation {
    return AdministrativeInformationFromJSONTyped(json, false);
}

export function AdministrativeInformationFromJSONTyped(json: any, ignoreDiscriminator: boolean): AdministrativeInformation {
    if (json == null) {
        return json;
    }
    return {
        
        'embeddedDataSpecifications': json['embeddedDataSpecifications'] == null ? undefined : ((json['embeddedDataSpecifications'] as Array<any>).map(EmbeddedDataSpecificationFromJSON)),
        'version': json['version'] == null ? undefined : AdministrativeInformationAllOfVersionFromJSON(json['version']),
        'revision': json['revision'] == null ? undefined : AdministrativeInformationAllOfRevisionFromJSON(json['revision']),
        'creator': json['creator'] == null ? undefined : ReferenceFromJSON(json['creator']),
        'templateId': json['templateId'] == null ? undefined : json['templateId'],
    };
}

export function AdministrativeInformationToJSON(json: any): AdministrativeInformation {
    return AdministrativeInformationToJSONTyped(json, false);
}

export function AdministrativeInformationToJSONTyped(value?: AdministrativeInformation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'embeddedDataSpecifications': value['embeddedDataSpecifications'] == null ? undefined : ((value['embeddedDataSpecifications'] as Array<any>).map(EmbeddedDataSpecificationToJSON)),
        'version': AdministrativeInformationAllOfVersionToJSON(value['version']),
        'revision': AdministrativeInformationAllOfRevisionToJSON(value['revision']),
        'creator': ReferenceToJSON(value['creator']),
        'templateId': value['templateId'],
    };
}

