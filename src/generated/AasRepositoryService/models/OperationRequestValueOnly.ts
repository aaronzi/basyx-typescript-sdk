/* tslint:disable */
/* eslint-disable */
/**
 * DotAAS Part 2 | HTTP/REST | Asset Administration Shell Repository Service Specification
 * The Full Profile of the Asset Administration Shell Repository Service Specification as part of the [Specification of the Asset Administration Shell: Part 2](http://industrialdigitaltwin.org/en/content-hub).   Publisher: Industrial Digital Twin Association (IDTA) April 2023
 *
 * The version of the OpenAPI document: V3.0.3_SSP-001
 * Contact: info@idtwin.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OperationRequestValueOnly
 */
export interface OperationRequestValueOnly {
    /**
     * The ValueOnly serialization (patternProperties and propertyNames will be supported probably with OpenApi 3.1). For the full description of the generic JSON validation schema see the ValueOnly-Serialization as defined in the 'Specification of the Asset Administration Shell - Part 2'.
     * @type {object}
     * @memberof OperationRequestValueOnly
     */
    inoutputArguments?: object;
    /**
     * The ValueOnly serialization (patternProperties and propertyNames will be supported probably with OpenApi 3.1). For the full description of the generic JSON validation schema see the ValueOnly-Serialization as defined in the 'Specification of the Asset Administration Shell - Part 2'.
     * @type {object}
     * @memberof OperationRequestValueOnly
     */
    inputArguments?: object;
    /**
     * 
     * @type {string}
     * @memberof OperationRequestValueOnly
     */
    clientTimeoutDuration: string;
}

/**
 * Check if a given object implements the OperationRequestValueOnly interface.
 */
export function instanceOfOperationRequestValueOnly(value: object): value is OperationRequestValueOnly {
    if (!('clientTimeoutDuration' in value) || value['clientTimeoutDuration'] === undefined) return false;
    return true;
}

export function OperationRequestValueOnlyFromJSON(json: any): OperationRequestValueOnly {
    return OperationRequestValueOnlyFromJSONTyped(json, false);
}

export function OperationRequestValueOnlyFromJSONTyped(json: any, ignoreDiscriminator: boolean): OperationRequestValueOnly {
    if (json == null) {
        return json;
    }
    return {
        
        'inoutputArguments': json['inoutputArguments'] == null ? undefined : json['inoutputArguments'],
        'inputArguments': json['inputArguments'] == null ? undefined : json['inputArguments'],
        'clientTimeoutDuration': json['clientTimeoutDuration'],
    };
}

export function OperationRequestValueOnlyToJSON(json: any): OperationRequestValueOnly {
    return OperationRequestValueOnlyToJSONTyped(json, false);
}

export function OperationRequestValueOnlyToJSONTyped(value?: OperationRequestValueOnly | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'inoutputArguments': value['inoutputArguments'],
        'inputArguments': value['inputArguments'],
        'clientTimeoutDuration': value['clientTimeoutDuration'],
    };
}

