/* tslint:disable */
/* eslint-disable */
/**
 * DotAAS Part 2 | HTTP/REST | Asset Administration Shell Repository Service Specification
 * The Full Profile of the Asset Administration Shell Repository Service Specification as part of the [Specification of the Asset Administration Shell: Part 2](http://industrialdigitaltwin.org/en/content-hub).   Publisher: Industrial Digital Twin Association (IDTA) April 2023
 *
 * The version of the OpenAPI document: V3.0.3_SSP-001
 * Contact: info@idtwin.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The Description object enables servers to present their capabilities to the clients, in particular which profiles they implement. At least one defined profile is required. Additional, proprietary attributes might be included. Nevertheless, the server must not expect that a regular client understands them.
 * @export
 * @interface ServiceDescription
 */
export interface ServiceDescription {
    /**
     * 
     * @type {Array<string>}
     * @memberof ServiceDescription
     */
    profiles?: Array<string>;
}

/**
 * Check if a given object implements the ServiceDescription interface.
 */
export function instanceOfServiceDescription(value: object): value is ServiceDescription {
    return true;
}

export function ServiceDescriptionFromJSON(json: any): ServiceDescription {
    return ServiceDescriptionFromJSONTyped(json, false);
}

export function ServiceDescriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceDescription {
    if (json == null) {
        return json;
    }
    return {
        
        'profiles': json['profiles'] == null ? undefined : json['profiles'],
    };
}

export function ServiceDescriptionToJSON(json: any): ServiceDescription {
    return ServiceDescriptionToJSONTyped(json, false);
}

export function ServiceDescriptionToJSONTyped(value?: ServiceDescription | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'profiles': value['profiles'],
    };
}

