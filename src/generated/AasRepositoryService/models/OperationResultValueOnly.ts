/* tslint:disable */
/* eslint-disable */
/**
 * DotAAS Part 2 | HTTP/REST | Asset Administration Shell Repository Service Specification
 * The Full Profile of the Asset Administration Shell Repository Service Specification as part of the [Specification of the Asset Administration Shell: Part 2](http://industrialdigitaltwin.org/en/content-hub).   Publisher: Industrial Digital Twin Association (IDTA) April 2023
 *
 * The version of the OpenAPI document: V3.0.3_SSP-001
 * Contact: info@idtwin.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ExecutionState } from './ExecutionState';
import {
    ExecutionStateFromJSON,
    ExecutionStateFromJSONTyped,
    ExecutionStateToJSON,
    ExecutionStateToJSONTyped,
} from './ExecutionState';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
    MessageToJSONTyped,
} from './Message';

/**
 * 
 * @export
 * @interface OperationResultValueOnly
 */
export interface OperationResultValueOnly {
    /**
     * 
     * @type {Array<Message>}
     * @memberof OperationResultValueOnly
     */
    messages?: Array<Message>;
    /**
     * 
     * @type {ExecutionState}
     * @memberof OperationResultValueOnly
     */
    executionState?: ExecutionState;
    /**
     * 
     * @type {boolean}
     * @memberof OperationResultValueOnly
     */
    success?: boolean;
    /**
     * The ValueOnly serialization (patternProperties and propertyNames will be supported probably with OpenApi 3.1). For the full description of the generic JSON validation schema see the ValueOnly-Serialization as defined in the 'Specification of the Asset Administration Shell - Part 2'.
     * @type {object}
     * @memberof OperationResultValueOnly
     */
    inoutputArguments?: object;
    /**
     * The ValueOnly serialization (patternProperties and propertyNames will be supported probably with OpenApi 3.1). For the full description of the generic JSON validation schema see the ValueOnly-Serialization as defined in the 'Specification of the Asset Administration Shell - Part 2'.
     * @type {object}
     * @memberof OperationResultValueOnly
     */
    outputArguments?: object;
}



/**
 * Check if a given object implements the OperationResultValueOnly interface.
 */
export function instanceOfOperationResultValueOnly(value: object): value is OperationResultValueOnly {
    return true;
}

export function OperationResultValueOnlyFromJSON(json: any): OperationResultValueOnly {
    return OperationResultValueOnlyFromJSONTyped(json, false);
}

export function OperationResultValueOnlyFromJSONTyped(json: any, ignoreDiscriminator: boolean): OperationResultValueOnly {
    if (json == null) {
        return json;
    }
    return {
        
        'messages': json['messages'] == null ? undefined : ((json['messages'] as Array<any>).map(MessageFromJSON)),
        'executionState': json['executionState'] == null ? undefined : ExecutionStateFromJSON(json['executionState']),
        'success': json['success'] == null ? undefined : json['success'],
        'inoutputArguments': json['inoutputArguments'] == null ? undefined : json['inoutputArguments'],
        'outputArguments': json['outputArguments'] == null ? undefined : json['outputArguments'],
    };
}

export function OperationResultValueOnlyToJSON(json: any): OperationResultValueOnly {
    return OperationResultValueOnlyToJSONTyped(json, false);
}

export function OperationResultValueOnlyToJSONTyped(value?: OperationResultValueOnly | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'messages': value['messages'] == null ? undefined : ((value['messages'] as Array<any>).map(MessageToJSON)),
        'executionState': ExecutionStateToJSON(value['executionState']),
        'success': value['success'],
        'inoutputArguments': value['inoutputArguments'],
        'outputArguments': value['outputArguments'],
    };
}

