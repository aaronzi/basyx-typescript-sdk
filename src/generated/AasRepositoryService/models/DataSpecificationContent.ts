/* tslint:disable */
/* eslint-disable */
/**
 * DotAAS Part 2 | HTTP/REST | Asset Administration Shell Repository Service Specification
 * The Full Profile of the Asset Administration Shell Repository Service Specification as part of the [Specification of the Asset Administration Shell: Part 2](http://industrialdigitaltwin.org/en/content-hub).   Publisher: Industrial Digital Twin Association (IDTA) April 2023
 *
 * The version of the OpenAPI document: V3.0.3_SSP-001
 * Contact: info@idtwin.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelType } from './ModelType';
import {
    ModelTypeFromJSON,
    ModelTypeFromJSONTyped,
    ModelTypeToJSON,
    ModelTypeToJSONTyped,
} from './ModelType';

/**
 * 
 * @export
 * @interface DataSpecificationContent
 */
export interface DataSpecificationContent {
    /**
     * 
     * @type {ModelType}
     * @memberof DataSpecificationContent
     */
    modelType: ModelType;
}



/**
 * Check if a given object implements the DataSpecificationContent interface.
 */
export function instanceOfDataSpecificationContent(value: object): value is DataSpecificationContent {
    if (!('modelType' in value) || value['modelType'] === undefined) return false;
    return true;
}

export function DataSpecificationContentFromJSON(json: any): DataSpecificationContent {
    return DataSpecificationContentFromJSONTyped(json, false);
}

export function DataSpecificationContentFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataSpecificationContent {
    if (json == null) {
        return json;
    }
    return {
        
        'modelType': ModelTypeFromJSON(json['modelType']),
    };
}

export function DataSpecificationContentToJSON(json: any): DataSpecificationContent {
    return DataSpecificationContentToJSONTyped(json, false);
}

export function DataSpecificationContentToJSONTyped(value?: DataSpecificationContent | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'modelType': ModelTypeToJSON(value['modelType']),
    };
}

